# Basic configuration
global
    log         /dev/log local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn 4096
    stats socket /var/run/haproxy.stat

# Some sane defaults
defaults
    log     global
    option  dontlognull
    retries 3
    option  redispatch
    timeout client 5s
    timeout server 5s
    timeout connect 5s

listen stats
    bind *:3833
    mode http
    stats enable
    stats uri /

# This section is to reload DNS Records
# Replace <DNS_SERVER_IP> and <DNS_SECONDARY_SERVER_IP> with your DNS Server IP addresses.
# For HAProxy 1.8 and newer
# resolvers my-dns
#     # nameserver dns1 <DNS_SERVER_IP>:53
#     # nameserver dns2 <DNS_SECONDARY_SERVER_IP>:53
#     nameserver dns1 4.2.2.1:53
#     nameserver dns2 4.2.2.2:53
#     resolve_retries 3
#     timeout resolve 2s
#     timeout retry 1s
#     accepted_payload_size 8192
#     hold valid 10s
#     hold obsolete 60s

# This declares the endpoint where your Agents connects for
# sending metrics (for example, the value of "dd_url").
frontend metrics-forwarder
    bind *:3834
    mode http
    option tcplog
    default_backend datadog-metrics

    use_backend datadog-api if { path_beg -i  /api/v1/validate }
    use_backend datadog-flare if { path_beg -i  /support/flare/ }

# This declares the endpoint where your Agents connects for
# sending traces (for example, the value of "endpoint" in the APM
# configuration section).
frontend traces-forwarder
    bind *:3835
    mode tcp
    option tcplog
    default_backend datadog-traces

# This declares the endpoint where your Agents connects for
# sending profiles (for example, the value of "apm_config.profiling_dd_url").
frontend profiles-forwarder
    bind *:3836
    mode tcp
    option tcplog
    default_backend datadog-profiles

# This declares the endpoint where your agents connects for
# sending processes (for example, the value of "url" in the process
# configuration section).
frontend processes-forwarder
    bind *:3837
    mode tcp
    option tcplog
    default_backend datadog-processes

# This declares the endpoint where your Agents connects for
# sending Logs (e.g the value of "logs.config.logs_dd_url")
# If sending logs with use_http: true
frontend logs_http_frontend
    bind *:3838
    mode http
    option tcplog
    default_backend datadog-logs-http

# If sending logs with use_tcp: true
# frontend logs_frontend
#    bind *:10514
#    mode tcp
#    option tcplog
#    default_backend datadog-logs

# This declares the endpoint where your Agents connects for
# sending database monitoring metrics and activity (e.g the value of "database_monitoring.metrics.dd_url" and "database_monitoring.activity.dd_url")
frontend database_monitoring_metrics_frontend
    bind *:3839
    mode http
    option tcplog
    default_backend datadog-database-monitoring-metrics

# This declares the endpoint where your Agents connects for
# sending database monitoring samples (e.g the value of "database_monitoring.samples.dd_url")
frontend database_monitoring_samples_frontend
    bind *:3840
    mode http
    option tcplog
    default_backend datadog-database-monitoring-samples

# This declares the endpoint where your Agents connects for
# sending Network Devices Monitoring metadata (e.g the value of "network_devices.metadata.dd_url")
frontend network_devices_metadata_frontend
    bind *:3841
    mode http
    option tcplog
    default_backend datadog-network-devices-metadata

# This declares the endpoint where your Agents connects for
# sending Network Devices SNMP Traps data (e.g the value of "network_devices.snmp_traps.forwarder.dd_url")
frontend network_devices_snmp_traps_frontend
    bind *:3842
    mode http
    option tcplog
    default_backend datadog-network-devices-snmp-traps

# This declares the endpoint where your Agents connect for
# sending Instrumentation Telemetry data (e.g. the value of "apm_config.telemetry.dd_url")
frontend instrumentation_telemetry_data_frontend
    bind *:3843
    mode tcp
    option tcplog
    default_backend datadog-instrumentations-telemetry

# This declares the endpoint where your Agents connects for
# sending Network Devices Monitoring NetFlow flows (for example, the value of "network_devices.netflow.dd_url")
frontend network_devices_netflow_frontend
    bind *:3845
    mode http
    option tcplog
    default_backend datadog-network-devices-netflow

backend datadog-metrics
    balance roundrobin
    mode http
    server-template mothership 5 haproxy-app.agent.datadoghq.com:443 ssl verify none

backend datadog-api
    mode http
    server-template mothership 5 api.datadoghq.com:443 ssl verify none
    
backend datadog-flare
    mode http
    server-template mothership 5 flare.datadoghq.com:443 ssl verify none
    
backend datadog-traces
    balance roundrobin
    mode tcp
    server-template mothership 5 trace.agent.datadoghq.com:443 ssl verify none
    
backend datadog-profiles
    balance roundrobin
    mode tcp
    server-template mothership 5 intake.profile.datadoghq.com:443 ssl verify none
    
backend datadog-processes
    balance roundrobin
    mode tcp
    server-template mothership 5 process.datadoghq.com:443 ssl verify none
    
backend datadog-logs-http
    balance roundrobin
    mode http
    server-template mothership 5 agent-http-intake.logs.datadoghq.com:443 ssl verify none
    
backend datadog-database-monitoring-metrics
    balance roundrobin
    mode http
    server-template mothership 5 dbm-metrics-intake.datadoghq.com:443 ssl verify none
    
backend datadog-database-monitoring-samples
    balance roundrobin
    mode http
    server-template mothership 5 dbquery-intake.datadoghq.com:443 ssl verify none
    
backend datadog-network-devices-metadata
    balance roundrobin
    mode http
    server-template mothership 5 ndm-intake.datadoghq.com:443 ssl verify none
    
backend datadog-network-devices-snmp-traps
    balance roundrobin
    mode http
    server-template mothership 5 snmp-traps-intake.datadoghq.com:443 ssl verify none
    
backend datadog-instrumentations-telemetry
    balance roundrobin
    mode tcp
    server-template mothership 5 instrumentation-telemetry-intake.datadoghq.com:443 ssl verify none
    
backend datadog-network-devices-netflow
    balance roundrobin
    mode http
    server-template mothership 5 ndmflow-intake.datadoghq.com:443 ssl verify none
    